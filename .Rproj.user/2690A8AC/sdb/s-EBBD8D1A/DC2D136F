{
    "collab_server" : "",
    "contents" : "library(readr)\nlibrary(dplyr)\nlibrary(quantmod)\n\n#import data\nOHLC <- read_csv(\"C:/Users/chang/Desktop/TEMP/OHLC.csv\")\nthree_legals <- read_csv(\"C:/Users/chang/Desktop/TEMP/三大法人.csv\")\n#clean\nOHLC = OHLC[,c(-4,-10)]\n#join\njoined_frame = inner_join(OHLC,three_legals,by=c(\"stkno\",\"Date\"))\n#遺漏值處理 NA to 0\njoined_frame[is.na(joined_frame)] <- 0\njoined_frame$Date = as.Date(joined_frame$Date, format= \"%Y-%d-%m\")\n\n#計算黃金&死亡交叉\n#取單股 (0050)\nstkno_0050 = OHLC[grep(\"0050\", OHLC$stkno),]\n#為建立 XTS物件做的處理\nstkno_0050 = stkno_0050[,c(-1,-8)]\ncolnames(stkno_0050) <- c(\"Date\",\"Volume\",\"Open\",\"High\",\"Low\",\"Close\")\nstkno_0050 = stkno_0050[,c(\"Date\",\"Open\",\"High\",\"Low\",\"Close\",\"Volume\")]\nstkno_0050 = stkno_0050[complete.cases(stkno_0050),]\n#建立XTS物件\nstk0050 = xts(stkno_0050[, -1], order.by=as.POSIXct(stkno_0050$Date))\n\n\n#1 K線圖，量，MA10，MA20\nchartSeries(stk0050,subset=\"last 6 months\",theme=\"white\", up.col='red', dn.col='green')\n#addSMA(10,col=\"blue\")\n#addSMA(20,col=\"red\")\nMA10<-runMean(stk0050[,4],n=10)\nMA20<-runMean(stk0050[,4],n=20)\naddTA(MA10,on=1,col=\"blue\")\naddTA(MA20,on=1,col=\"red\")\n\n\n\n#2.0 去除量的圖 加上回測資產圖  中程(MA20 vs MA60)\nchartSeries(stk0050['2004-06-30/2017-06-16'],theme=\"white\", up.col='red', dn.col='green',TA=NULL)\nMA20<-runMean(stk0050[,4],n=20)\nMA60<-runMean(stk0050[,4],n=60)\naddTA(MA20,on=1,col=\"blue\")\naddTA(MA60,on=1,col=\"red\")\nposition<-Lag(ifelse(MA20>=MA60, 1,0))\nreturn<-ROC(Cl(stk0050))*position\nreturn <- return['2004-06-30/2017-06-16']\neq <- exp(cumsum(return))\naddTA(eq)\n\n\n#2.1 去除量的圖 加上回測資產圖  中程 ZOOM IN 資產下降的部分 (2012-10~2013-12)\nzoomChart('2012-10::2013-12') \naddTA(MA20-MA60)\n\n\n#2.2 去除量的圖 加上回測資產圖  近程(MA5 vs MA20)\nchartSeries(stk0050['2004-06-30/2013-12-31'],theme=\"white\", up.col='red', dn.col='green',TA=NULL)\nMA5<-runMean(stk0050[,4],n=5)\nMA20<-runMean(stk0050[,4],n=20)\naddTA(MA5,on=1,col=\"blue\")\naddTA(MA20,on=1,col=\"red\")\nposition<-Lag(ifelse(MA5>=MA20, 1,0))\nreturn<-ROC(Cl(stk0050))*position\nreturn <- return['2004-06-30/2013-12-31']\neq <- exp(cumsum(return))\naddTA(eq)\nzoomChart('2012-10::2013-12') \naddTA(MA5-MA20)\n\n\n#3.0 反例 反例，資產下降\n#取單股 (1102) \nstkno_1102 = OHLC[grep(\"1102\", OHLC$stkno),]\n#為建立 XTS物件做的處理\nstkno_1102 = stkno_1102[,c(-1,-8)]\ncolnames(stkno_1102) <- c(\"Date\",\"Volume\",\"Open\",\"High\",\"Low\",\"Close\")\nstkno_1102 = stkno_1102[,c(\"Date\",\"Open\",\"High\",\"Low\",\"Close\",\"Volume\")]\nstkno_1102 = stkno_1102[complete.cases(stkno_1102),]\n#建立XTS物件\nstk1102 = xts(stkno_1102[, -1], order.by=as.POSIXct(stkno_1102$Date))\n\n# 1102 圖表\nchartSeries(stk1102['2004-06-30/2017-06-16'],theme=\"white\", up.col='red', dn.col='green',TA=NULL)\nMA20<-runMean(stk1102[,4],n=20)\nMA60<-runMean(stk1102[,4],n=60)\naddTA(MA20,on=1,col=\"blue\")\naddTA(MA60,on=1,col=\"red\")\nposition<-Lag(ifelse(MA20>=MA60, 1,0))\nreturn<-ROC(Cl(stk1102))*position\nreturn <- return['2004-06-30/2017-06-16']\neq <- exp(cumsum(return))\naddTA(eq)\n\n\n#4.0 對1735ㄓ支股票回測\n#get all stkno\nstkno_all = unique(joined_frame$stkno)\n\ngeteq_all <- function(x){\n  #計算黃金&死亡交叉\n  #取單股 (x)\n  stkno_ = OHLC[grep(x, OHLC$stkno),]\n  #為建立 XTS物件做的處理\n  stkno_ = stkno_[,c(-1,-8)]\n  colnames(stkno_) <- c(\"Date\",\"Volume\",\"Open\",\"High\",\"Low\",\"Close\")\n  stkno_ = stkno_[,c(\"Date\",\"Open\",\"High\",\"Low\",\"Close\",\"Volume\")]\n  stkno_ = stkno_[complete.cases(stkno_),]\n  #建立XTS物件\n  stk = xts(stkno_[, -1], order.by=as.POSIXct(stkno_$Date))\n  fastMA<-runMean(stk[,4],n=20)\n  slowMA<-runMean(stk[,4],n=60)\n  position<-Lag(ifelse(fastMA>=slowMA, 1,0))\n  return<-ROC(Cl(stk))*position\n  coredata(return)[!is.finite(return)] <- NA\n  return = return[complete.cases(return),]\n  eq <- exp(cumsum(return))\n  last_eq = eq[length(eq)]\n  df_last_eq = data.frame(last_eq, row.names=NULL)\n  last_value = df_last_eq[1,]\n  return(last_value)\n}\n\ngeteq_3y <- function(x){\n  #計算黃金&死亡交叉\n  #取單股 (x)\n  stkno_ = OHLC[grep(x, OHLC$stkno),]\n  #為建立 XTS物件做的處理\n  stkno_ = stkno_[,c(-1,-8)]\n  colnames(stkno_) <- c(\"Date\",\"Volume\",\"Open\",\"High\",\"Low\",\"Close\")\n  stkno_ = stkno_[,c(\"Date\",\"Open\",\"High\",\"Low\",\"Close\",\"Volume\")]\n  stkno_ = stkno_[complete.cases(stkno_),]\n  #建立XTS物件\n  stk = xts(stkno_[, -1], order.by=as.POSIXct(stkno_$Date))\n  fastMA<-runMean(stk[,4],n=20)\n  slowMA<-runMean(stk[,4],n=60)\n  position<-Lag(ifelse(fastMA>=slowMA, 1,0))\n  return<-ROC(Cl(stk))*position\n  coredata(return)[!is.finite(return)] <- NA\n  return = return[complete.cases(return),]\n  return = last(return, \"3 years\")#三年\n  eq <- exp(cumsum(return))\n  last_eq = eq[length(eq)]\n  df_last_eq = data.frame(last_eq, row.names=NULL)\n  last_value = df_last_eq[1,]\n  return(last_value)\n}\n\n#取近所有資料進行回測\nindexx <- 0\nlist <- list()\nlist_stkno <- list()\nP_count_all = 0\nN_count_all = 0\n\nfor (i in stkno_all) { \n  tryCatch({\n    eq = geteq_all(i)\n    indexx <- indexx + 1\n    list_stkno[[indexx]] = i\n    list[[indexx]] <- eq\n    \n    if (eq  > 1) {\n      P_count_all = P_count_all + 1\n    } else {\n      N_count_all = N_count_all + 1\n    } \n    print(eq)\n  }, error=function(e){print(e)})\n}\n\nprint(P_count_all)\nprint(N_count_all)\nP_count_all / (N_count_all + P_count_all)\n\nDF = data.frame(stkno=character(),\n                eq=double(),\n                stringsAsFactors=FALSE)\n\nDF = do.call(rbind, Map(data.frame, stkno=list_stkno, eq=list))\nmean_eq_all = mean(DF$eq)\nmean(DF$eq)\nmax(DF$eq)\n\n#取近三年資料進行回測\nindexx <- 0\nlist <- list()\nlist_stkno <- list()\nP_count_3years = 0\nN_count_3years = 0\n\nfor (i in stkno_all) { \n  tryCatch({\n    eq = geteq_3y(i)\n    indexx <- indexx + 1\n    list_stkno[[indexx]] = i\n    list[[indexx]] <- eq\n    \n    if (eq  > 1) {\n      P_count_3years = P_count_3years + 1\n    } else {\n      N_count_3years = N_count_3years + 1\n    } \n    print(eq)\n  }, error=function(e){print(e)})\n}\n\nprint(P_count_3years)\nprint(N_count_3years)\nP_count_3years /( P_count_3years + N_count_3years)\nDF_3y = data.frame(stkno=character(),\n                   eq=double(),\n                   stringsAsFactors=FALSE)\n\nDF_3y = do.call(rbind, Map(data.frame, stkno=list_stkno, eq=list))\nmean_eq_3years = mean(DF_3y$eq)\nmean(DF_3y$eq)\nmax(DF_3y$eq)\n\n\n",
    "created" : 1497991290036.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "99|25|121|0|\n123|24|146|0|\n155|22|169|0|\n191|22|205|0|\n",
    "hash" : "2731217271",
    "id" : "DC2D136F",
    "lastKnownWriteTime" : 1497992208,
    "last_content_update" : 1497992208792,
    "path" : "~/R/fianl.R",
    "project_path" : null,
    "properties" : {
    },
    "relative_order" : 3,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}